# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ConnectionStrings__DefaultConnection: "Host=localhost;Port=5432;Database=omsdb;Username=postgres;Password=password"
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: omsdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Install EF Core CLI
      run: dotnet tool install --global dotnet-ef
    - name: Add .NET tools to PATH
      run: echo "$HOME/.dotnet/tools" >> $GITHUB_PATH
    - name: Apply Migrations
      run: dotnet ef database update --project OrderManagementSystem.API/OrderManagementSystem.API.csproj
    - name: Start API server
      run: |
        dotnet run --project OrderManagementSystem.API/OrderManagementSystem.API.csproj &
        for i in {1..10}; do
          nc -z localhost 5000 && echo "API is up!" && break
          echo "Waiting for API to start..."
          sleep 2
        done
    - name: Test
      run: dotnet test --no-build --verbosity normal
